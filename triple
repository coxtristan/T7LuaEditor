let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/source/repos/Priscilla
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +1 W:/Priscilla
badd +20 W:/Priscilla/Source/Engine/renderer.h
badd +23 W:/Priscilla/Source/Engine/scene.cpp
badd +42 W:/Priscilla/Build.bat
badd +35 W:/Priscilla/scratch
badd +152 W:/Priscilla/Source/Engine/win32_input.h
badd +290 W:/Priscilla/Source/Engine/win32_input.cpp
badd +76 W:/Priscilla/Source/Application/Application.cpp
badd +11 W:/Priscilla/Source/Engine/camera.cpp
badd +21 W:/Priscilla/Source/Engine/camera_controller.cpp
badd +85 W:/Priscilla/Source/Engine/scene.h
badd +461 W:/Priscilla/Source/Engine/renderer.cpp
badd +1 W:/Priscilla/Source/Engine/ray_cast.cpp
badd +2 W:/Priscilla/Source/Engine/ray_cast.h
badd +25 W:/Priscilla/Source/Engine/debug_lines.h
badd +15 W:/Priscilla/Source/Engine/renderer_types.h
badd +46 CMakeLists.txt
badd +6 build.ps1
badd +17 Source/defines.h
badd +11 .clang-format
badd +8 Source/Engine/logging.h
badd +12 W:/Priscilla/Source/Engine/logging.cpp
badd +9 W:/Priscilla/SetupEnv.bat
badd +1 setupenv.ps1
badd +65 Source/Application/Application.h
badd +17 W:/Priscilla/Source/main.cpp
badd +70 Source/Engine/font_renderer.cpp
badd +8 Source/Engine/font_loader.h
badd +8 Source/Engine/font_loader.cpp
badd +173 W:/Priscilla/ftsdf.c
badd +21 scratch
badd +1 w:/freetype-demos/
badd +698 w:/freetype-demos/src/ftsdf.c
badd +1 W:/Priscilla/Source/ThirdParty/freetype/include/freetype/freetype.h
badd +37 W:/Priscilla/Source/ThirdParty/freetype/include/ft2build.h
badd +541 W:/Priscilla/Source/ThirdParty/freetype/include/freetype/config/ftheader.h
badd +31 Source/Engine/font_renderer.h
badd +30 Source/HLSL/font.hlsl
badd +495 ~/source/repos/freetype-demos/src/ftcommon.c
badd +6 Source/Engine/math.h
badd +36 Source/Engine/math.cpp
badd +460 Source/Engine/input_system.cpp
badd +34 Source/Engine/debug_render.h
badd +22 Source/HLSL/fullscreen_quad.hlsl
badd +2 Source/Editor/EditorLayer.cpp
badd +1 Source/Editor/EditorLayer.h
badd +155 Source/Engine/input_system.h
badd +1 Source/main.h
badd +30 Source/Engine/win32_lib.h
badd +11 Source/Engine/win32_lib.cpp
badd +98 Source/Engine/camera_system.cpp
badd +48 Source/Engine/camera_system.h
badd +1 Source/Engine/camera_controller.cpp
badd +12 Source/Engine/camera.h
badd +1 Source/Engine/camera_controller.h
badd +1 Source/Engine/scene_renderer.cpp
badd +3 Source/Engine/scene_renderer.h
badd +58 Source/Application/Application.cpp
badd +0 Source/Engine/scene.cpp
badd +188 Source/Engine/renderer.h
badd +0 Source/Engine/renderer.cpp
argglobal
%argdel
$argadd W:/Priscilla
set stal=2
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabrewind
edit Source/Engine/scene.cpp
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
2wincmd h
wincmd w
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
wincmd =
argglobal
balt W:/Priscilla/Source/Engine/scene.h
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 361 - ((34 * winheight(0) + 37) / 74)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 361
normal! 033|
wincmd w
argglobal
if bufexists(fnamemodify("Source/Engine/renderer.h", ":p")) | buffer Source/Engine/renderer.h | else | edit Source/Engine/renderer.h | endif
if &buftype ==# 'terminal'
  silent file Source/Engine/renderer.h
endif
balt Source/Application/Application.cpp
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 150 - ((39 * winheight(0) + 37) / 74)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 150
normal! 0
wincmd w
argglobal
if bufexists(fnamemodify("W:/Priscilla/Source/Engine/renderer.cpp", ":p")) | buffer W:/Priscilla/Source/Engine/renderer.cpp | else | edit W:/Priscilla/Source/Engine/renderer.cpp | endif
if &buftype ==# 'terminal'
  silent file W:/Priscilla/Source/Engine/renderer.cpp
endif
balt W:/Priscilla/Source/Application/Application.cpp
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 439 - ((18 * winheight(0) + 37) / 74)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 439
normal! 0
wincmd w
2wincmd w
wincmd =
tabnext
edit W:/Priscilla/Source/Application/Application.cpp
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 88 - ((31 * winheight(0) + 23) / 47)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 88
normal! 0
tabnext
edit w:/freetype-demos/src/ftsdf.c
argglobal
balt ~/source/repos/freetype-demos/src/ftcommon.c
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 70 - ((0 * winheight(0) + 23) / 47)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 70
normal! 033|
tabnext 1
set stal=1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
let g:this_session = v:this_session
let g:this_obsession = v:this_session
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
